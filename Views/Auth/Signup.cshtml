@{
    Layout = null;
    }
 <link rel="stylesheet" href="~/css/site.css"   />

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<body class="signup-page">
    <div class="signup-container" data-bind="with: signupViewModel">
        <h2 class="text-center mb-4 text-dark">Signup</h2>

    <form data-bind="submit: submitSignup">
        <div class="form-group">
            <label for="FullName">Full Name</label>
            <input type="text"
                   class="form-control"
                   id="FullName"
                       data-bind="value: fullName"
                   placeholder="Enter your full name"
                   oninput="validateFullName(this)" 
                   required />
            <div id="error-message" class="text-danger" style="display: none;"></div>
        </div>
            
        <div class="form-group">
            <label for="Email">Email</label>
            <input type="email" class="form-control" id="Email" placeholder="Enter your email"
                   data-bind="value: email"
                  required
                    />
            <small id="emailError" class="form-text text-danger"></small>
        </div>

        <div class="form-group">
            <label for="PasswordHash">Password</label>
            <input type="password" class="form-control" id="PasswordHash" placeholder="Enter your password"
                   data-bind="value: password"
                   required minlength="6" />
        </div>

        <button type="submit" class="btn btn-primary btn-block" data-bind="disable: isSubmitting">Signup</button>
    </form>

    <p id="message" class="text-center mt-2 small" data-bind="text: message, css: { 'text-success': isSuccess, 'text-danger': !isSuccess }"></p>
    
        <div class="text-center mt-3">
            <p>Already have an account? <a href="/auth/login">Login here</a></p>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/knockout@3.5.1/build/output/knockout-latest.js"></script>
     <script src="./js/site.js"></script>
    
    
    <script> 
            function SignupViewModel() {
            var self = this;

            self.fullName = ko.observable('');
            self.email = ko.observable('');
            self.password = ko.observable('');
            self.message = ko.observable('');
            self.isSuccess = ko.observable(false);
            self.isSubmitting = ko.observable(false);

            self.submitSignup = async function () {
                self.isSubmitting(true);
                const data = {
                    fullName: self.fullName(),
                    email: self.email(),
                    passwordHash: self.password()  
                };
                console.log(data);
                try {
                    const response = await fetch('/auth/signup', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    const responseData = await response.json(); // Parse the response JSON

                    if (responseData.success) {
                        self.isSuccess(true);
                        self.message(responseData.message); // Success message from backend
                        setTimeout(() => {
                            window.location.href = '/auth/login';  
                        }, 2000);
                    } else {
                        self.isSuccess(false);
                        self.message(responseData.message); // Error message from backend
                    }
                } catch (error) {
                    console.error('Error during signup:', error);
                    self.isSuccess(false);
                    self.message('An unexpected error occurred. Please try again later.');
                } finally {
                    self.isSubmitting(false);
                }
            };
        }

        
        const signupViewModel = new SignupViewModel();
        ko.applyBindings({ signupViewModel });
    </script>

    <script>
function validateFullName(input) {
    const errorMessage = document.getElementById('error-message');
    const submitButton = document.querySelector('.btn-primary'); // Select the submit button
    const value = input.value;

    // Clear previous error message
    errorMessage.style.display = 'none';
    errorMessage.textContent = '';
    submitButton.disabled = false; // Enable button initially

    // Replace any characters that are not letters or spaces
    input.value = value.replace(/[^a-zA-Z ]+/g, '');

    // Check if the input is empty or does not contain at least one alphabet
    if (input.value.trim() === '' || !/[a-zA-Z]/.test(input.value)) {
        errorMessage.textContent = 'Please enter at least one alphabetic character.';
        errorMessage.style.display = 'block';
        submitButton.disabled = true; // Disable button if validation fails
    }
}function validateFullName(input) {
    const errorMessage = document.getElementById('error-message');
    const submitButton = document.querySelector('.btn-primary'); // Select the submit button
    const value = input.value;

    // Clear previous error message
    errorMessage.style.display = 'none';
    errorMessage.textContent = '';
    submitButton.disabled = false; // Enable button initially

    // Replace any characters that are not letters or spaces
    input.value = value.replace(/[^a-zA-Z ]+/g, '');

    // Check if the input is empty or does not contain at least one alphabet
    if (input.value.trim() === '' || !/[a-zA-Z]/.test(input.value)) {
        errorMessage.textContent = 'Please enter at least one alphabetic character.';
        errorMessage.style.display = 'block';
        submitButton.disabled = true; // Disable button if validation fails
    }
}


</script>
  
</body>
 
