@*   @model ContactManagement.Models.ContactModel



 <h2>Add New Contact</h2>

 <form id="contactForm">
     <div class="form-group">
         <label for="Name">Name</label>
         <input type="text" class="form-control" id="Name" name="Name" required />
     </div>
     <div class="form-group">
         <label for="Email">Email</label>
         <input type="email" class="form-control" id="Email" name="Email" required />
     </div>
     <div class="form-group">
         <label for="Phone">Phone</label>
         <input type="text" class="form-control" id="Phone" name="Phone" required />
     </div>
     <div class="form-group">
         <label for="Company">Company</label>
         <input type="text" class="form-control" id="Company" name="Company" required />
     </div>

     <button type="submit" class="btn btn-success">Add Contact</button>
 </form>

 <script>
     document.getElementById('contactForm').addEventListener('submit', async function (e) {
         e.preventDefault(); // Prevent the form from submitting the default way

         let formData = {
             Name: document.getElementById('Name').value,
             Email: document.getElementById('Email').value,
             Phone: document.getElementById('Phone').value,
             Company: document.getElementById('Company').value
         };

         try {
             const response = await fetch('/contacts', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json'
                 },
                 body: JSON.stringify(formData)
             });

             if (response.ok) {
                 alert("Contact added successfully!");
                 window.location.href = '/contacts/getallcontacts';

             } else {
                 const errorData = await response.json();
                 alert("Failed to add contact: " + errorData.errors);
             }
         } catch (error) {
             alert("Error: " + error.message);
         }
     });
 </script>
 *@



@*
  @model ContactManagement.Models.ContactModel

 <h2>Add New Contact</h2>

 <form id="contactForm">
     <div class="form-group">
         <label for="Name">Name</label>
         <input type="text" class="form-control" id="Name" name="Name" required />
     </div>
     <div class="form-group">
         <label for="Email">Email</label>
         <input type="email" class="form-control" id="Email" name="Email" required />
     </div>
     <div class="form-group">
         <label for="Phone">Phone</label>
         <input type="text" class="form-control" id="Phone" name="Phone" required />
     </div>
     <div class="form-group">
         <label for="Company">Company</label>
         <input type="text" class="form-control" id="Company" name="Company" required />
     </div>

     <button type="submit" class="btn btn-success">Add Contact</button>
 </form>

 <div id="errorMessage" class="error-message" style="color: red; margin-top: 10px;"></div> <!-- Error message will be shown here -->

 <script>
     document.getElementById('contactForm').addEventListener('submit', async function (e) {
         e.preventDefault(); // Prevent the form from submitting the default way

         let formData = {
             Name: document.getElementById('Name').value,
             Email: document.getElementById('Email').value,
             Phone: document.getElementById('Phone').value,
             Company: document.getElementById('Company').value
         };

         try {
             const response = await fetch('/contacts', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json'
                 },
                 body: JSON.stringify(formData)
             });

             if (response.ok) {
                 alert("Contact added successfully!");
                 window.location.href = '/contacts/getallcontacts'; // Redirect to GetAllContacts page after successful addition
             } else if (response.status === 409) {
                 // If contact already exists (Conflict)
                 document.getElementById('errorMessage').textContent = "This contact already exists.";
             } else {
                 const errorData = await response.json();
                 document.getElementById('errorMessage').textContent = "Failed to add contact: " + errorData.errors;
             }
         } catch (error) {
             document.getElementById('errorMessage').textContent = "Error: " + error.message;
         }
     });
 </script> *@



 @model ContactManagement.Models.ContactModel

<h2>Add New Contact</h2>

<div class="form-group">
    <label for="Name">Name</label>
    <input type="text" class="form-control" id="Name" data-bind="value: name, valueUpdate: 'input'" required />
</div>
<div class="form-group">
    <label for="Email">Email</label>
    <input type="email" class="form-control" id="Email" data-bind="value: email, valueUpdate: 'input'" required />
</div>
<div class="form-group">
    <label for="Phone">Phone</label>
    <input type="text" class="form-control" id="Phone" data-bind="value: phone, valueUpdate: 'input'" required />
</div>
<div class="form-group">
    <label for="Company">Company</label>
    <input type="text" class="form-control" id="Company" data-bind="value: company, valueUpdate: 'input'" required />
</div>

<button class="btn btn-success" data-bind="click: addContact">Add Contact</button>

<div id="errorMessage" class="error-message" style="color: red; margin-top: 10px;" data-bind="text: errorMessage"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/knockout@3.5.1/build/output/knockout-latest.js"></script>
<script>
    function ContactViewModel() {
        var self = this;

        // Observables for form fields
        self.name = ko.observable('');
        self.email = ko.observable('');
        self.phone = ko.observable('');
        self.company = ko.observable('');

        // Observable for error messages
        self.errorMessage = ko.observable('');

        // Add contact function
        self.addContact = async function () {
            let formData = {
                Name: self.name(),
                Email: self.email(),
                Phone: self.phone(),
                Company: self.company()
            };

            try {
                const response = await fetch('/contacts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    alert("Contact added successfully!");
                    window.location.href = '/contacts/getallcontacts';
                } else if (response.status === 409) {
                    self.errorMessage("This contact already exists.");
                } else {
                    const errorData = await response.json();
                    self.errorMessage("Failed to add contact: " + (errorData.errors || "Unknown error"));
                }
            } catch (error) {
                self.errorMessage("Error: " + error.message);
            }
        };
    }

    // Apply bindings
    ko.applyBindings(new ContactViewModel());
</script>
